resources:
  pipelines:
  - pipeline: build
    source: 'Python packaging pipeline'
    trigger: true 
    
jobs:
- job: Linux_Test
  timeoutInMinutes: 60
  variables:
    skipComponentGovernanceDetection: true
  workspace:
    clean: all
  pool: Linux-CPU  
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifact'
    inputs:
      preferTriggeringPipeline: true      
      artifactName: 'drop-linux-cpu-x86_64'
      targetPath: '$(Build.BinariesDirectory)/Release'
      runVersion: 'latest'
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 841
      #buildVersionToDownload: specific
      #pipelineId: 227749
    
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifact'
    inputs:
      #buildType: 'current'
      artifactName: 'onnxruntime'
      targetPath: '$(Build.BinariesDirectory)/whl'
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 841
      #buildVersionToDownload: specific
      #pipelineId: 227749

  - task: CmdLine@2
    inputs:
      script: |
         set -e -x
         # We assume the machine doesn't have gcc and python development header files
         sudo rm -f /build /onnxruntime_src
         sudo ln -s $(Build.SourcesDirectory) /onnxruntime_src
         python3 -m pip uninstall -y ort-nightly-gpu ort-nightly onnxruntime onnxruntime-gpu onnxruntime-training onnxruntime-directml ort-nightly-directml onnx -qq
         cp $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker/scripts/manylinux/requirements.txt $(Build.BinariesDirectory)/requirements.txt
         # Test ORT with the latest ONNX release.
         sed -i "s/git+http:\/\/github\.com\/onnx\/onnx.*/onnx/" $(Build.BinariesDirectory)/requirements.txt
         python3 -m pip install -r $(Build.BinariesDirectory)/requirements.txt
         python3 -m pip install --find-links $(Build.BinariesDirectory)/whl onnxruntime
         ln -s /data/models $(Build.BinariesDirectory)
         cd $(Build.BinariesDirectory)/Release
         # Restore file permissions
         xargs -a $(Build.BinariesDirectory)/Release/perms.txt chmod a+x
         python3 $(Build.SourcesDirectory)/tools/ci_build/build.py \
              --build_dir $(Build.BinariesDirectory) \
              --config Release --test \
              --skip_submodule_sync \
              --build_shared_lib \
              --parallel \
              --build_wheel \
              --enable_onnx_tests \
              --enable_pybind --ctest_path ''

  - template: templates/clean-agent-build-directory-step.yml